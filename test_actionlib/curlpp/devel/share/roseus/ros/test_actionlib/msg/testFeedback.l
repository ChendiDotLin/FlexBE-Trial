;; Auto-generated. Do not edit!


(when (boundp 'test_actionlib::testFeedback)
  (if (not (find-package "TEST_ACTIONLIB"))
    (make-package "TEST_ACTIONLIB"))
  (shadow 'testFeedback (find-package "TEST_ACTIONLIB")))
(unless (find-package "TEST_ACTIONLIB::TESTFEEDBACK")
  (make-package "TEST_ACTIONLIB::TESTFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude testFeedback.msg.html


(defclass test_actionlib::testFeedback
  :super ros::object
  :slots (_test_feedback ))

(defmethod test_actionlib::testFeedback
  (:init
   (&key
    ((:test_feedback __test_feedback) 0)
    )
   (send-super :init)
   (setq _test_feedback (round __test_feedback))
   self)
  (:test_feedback
   (&optional __test_feedback)
   (if __test_feedback (setq _test_feedback __test_feedback)) _test_feedback)
  (:serialization-length
   ()
   (+
    ;; int32 _test_feedback
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _test_feedback
       (write-long _test_feedback s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _test_feedback
     (setq _test_feedback (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get test_actionlib::testFeedback :md5sum-) "fa3040db3efe13ae7d434a0ce44bd07b")
(setf (get test_actionlib::testFeedback :datatype-) "test_actionlib/testFeedback")
(setf (get test_actionlib::testFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#feedback
int32 test_feedback


")



(provide :test_actionlib/testFeedback "fa3040db3efe13ae7d434a0ce44bd07b")


